class GoalKeeper {

	field int x;
	field int y;
	field int width;
	field int height;
	field boolean left;
	
	

	constructor GoalKeeper new(){
		let x = 210;
		let y = 28;
		let width = 8;
		let height = 5;
		let left = false;
		do draw();
		return this;
	}
	
	
	method boolean isBallOnGoalKeeper(int ball_x, int ball_y){
		var boolean flagX,flagY, rightX, leftX, upY, downY;
		var int temp;
		let temp=Math.abs(ball_y-y);
		let upY = (temp<10);
		let temp = Math.abs(y+height-ball_y);
		let downY = (temp<10);
		let temp=Math.abs(ball_x-x);
		let rightX = (temp<10);
		let temp=Math.abs(x+width-ball_x);
		let leftX = (temp<10);

		let flagX = ( (x<ball_x-10) & ((x+width)>ball_x+10) );
		let flagY = ((y<ball_y-10) & ((y+height)>ball_y+10));
		if(flagX){
			if(upY | downY){
				return true;
			}
		}
		if (flagY){
			if(rightX | leftX){
				return true;
			}
		}
		return false;
	}

    method void dispose() {
        do Memory.deAlloc(this);
        return;
    }


    /** Draws the GoalKeeper on the screen. */
    method void draw() {
        do Screen.setColor(true);
        do Screen.drawRectangle(x, y, x + width, y + height);
        return;
    }
    
    
	method void erase() {
        do Screen.setColor(false);
        do Screen.drawRectangle(x, y, x + width, y + height);
        return;
    }

	method void move() {
		if(left){
			do moveLeft();
		}
		else{
			do moveRight();
		}	
		return;
	}
	
	
	
	
    /** Moves left by 2. */
    method void moveLeft() {
        if (x > 200) {
            do Screen.setColor(false);
            do Screen.drawRectangle((x + width) - 1, y, x + width, y + height);
            let x = x - 2;
            do Screen.setColor(true);
            do Screen.drawRectangle(x, y, x + 1, y + height);
        }
	else{
		let left=false;
	}
        return;
    }

    /** Moves right by 2. */
    method void moveRight() {
        if ((x + width) < 315) {
            do Screen.setColor(false);
            do Screen.drawRectangle(x, y, x + 1, y + height);
            let x = x + 2;
            do Screen.setColor(true);
            do Screen.drawRectangle((x + width) - 1, y, x + width, y + height);

        }
	else{
		let left=true;
	}
        return;
    }
}
